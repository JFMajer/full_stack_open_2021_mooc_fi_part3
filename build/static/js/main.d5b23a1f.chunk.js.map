{"version":3,"sources":["components/Number.js","components/PersonForm.js","components/Filter.js","services/phonebook.js","App.js","reportWebVitals.js","index.js"],"names":["Number","props","PersonForm","onSubmit","addName","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","search","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","oldPerson","put","ShowMessage","message","className","ShowErrorMessage","errorMessage","App","useState","persons","setPersons","setNewName","setNewNumber","setMessage","setErrorMessage","useEffect","phonebook","res","console","log","e","searchQuery","target","toLowerCase","map","person","name","includes","display","preventDefault","isTaken","number","persona","window","confirm","iGotPersonBack","p","setTimeout","catch","error","allNumbers","concat","filter","handleDelete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5b23a1f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Number = (props) => {\n  return (\n    <p>Hello</p>\n    //<li>{ props.person.name } { props.person.number } <button onClick={props.handleDelete}>delete</button></li>\n  )\n}\n\nexport default Number","import React from 'react';\n\nconst PersonForm = (props) =>\n{\n    return (\n        <form onSubmit={ props.addName }>\n            name: <input value={ props.newName } onChange={ props.handleNameChange } />\n            number: <input value={ props.newNumber } onChange={ props.handleNumberChange } />\n            <button type=\"submit\">add</button>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react';\n\nconst Filter = ({search}) => {\n    return (\n        <div>search for <input onChange={ search }></input> </div>\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data)\n}\n\nconst addPerson = (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst updateNumber = (id, oldPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, oldPerson)\n    return request.then(response => response.data)\n}\n\n\nexport default {getAll, addPerson, deletePerson, updateNumber}\n\n","//import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react'\nimport Number from './components/Number'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport phonebook from './services/phonebook';\n\nconst ShowMessage = ({ message }) => {\n  if (message === '') {\n    return null\n  }\n  return (\n    <div className=\"message\">\n      { message }\n    </div>\n  )\n}\n\nconst ShowErrorMessage = ({ errorMessage }) => {\n  if (errorMessage === '') {\n    return null\n  }\n  return (\n    <div className=\"errorMessage\">\n      { errorMessage }\n    </div>\n  )\n\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(() => {\n    phonebook\n      .getAll()\n      .then(res => {\n        console.log('promise fuillfiled')\n        setPersons(res)\n        console.log(persons)\n      })\n  }, [])\n\n  // const hook = () => {\n  //   phonebook\n  //     .getAll()\n  //     .then(response => {\n  //       setPersons(response)\n  //     })\n  //     console.log('persons ', persons)\n  //     phonebook\n  //     .getAll()\n  //     .then(resp => {\n  //       setPersons(resp)\n  //     })\n  // }\n\n  // useEffect(hook, [])\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const search = (e) => {\n    let searchQuery = e.target.value.toLowerCase()\n    setPersons(persons.map(person => {\n      if (person.name.toLowerCase().includes(searchQuery)) {\n        return { ...person, display: true }\n      } else {\n        return { ...person, display: false }\n      }\n    }))\n\n  }\n\n\n  const addName = (e) => {\n    e.preventDefault()\n    console.log('hello');\n    let isTaken = false;\n    const person = {\n      name: newName,\n      number: newNumber,\n      display: true\n    }\n    console.log('person:', person)\n    persons.map(persona => {\n      if (persona.name === newName) {\n        let confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n        if (confirm) {\n          phonebook\n            .updateNumber(persona.id, person)\n            .then(iGotPersonBack => {\n              setPersons(persons.map(p => p.id === iGotPersonBack.id ? iGotPersonBack : p))\n            })\n            .then(() => {\n              setMessage(`Number for ${persona.name} updated`)\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n            })\n            .catch(error => {\n              setErrorMessage(`Something bad happened: ${error}`)\n            })\n        }\n        return isTaken = true;\n      }\n    })\n    if (!isTaken) {\n      phonebook\n        .addPerson(person)\n        .then(allNumbers => {\n          setPersons(persons.concat(allNumbers))\n        })\n        .then(() => {\n          setMessage(`Person ${person.name} has been added to phonebook!`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleDelete = (person) => {\n    const id = person.id;\n    let confirm = window.confirm(`you sure you want to remove ${person.name}?`)\n    if (confirm) {\n      phonebook\n        .deletePerson(id)\n        .then(\n          setPersons(persons.filter(person => person.id !== id))\n        )\n        .then(() => {\n          setMessage(`Person ${person.name} has been removed!`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        <h2>Phonebook</h2>\n        <Filter search={ search } />\n        <h2>Add new</h2>\n        <PersonForm addName={ addName } newName={ newName } handleNameChange={ handleNameChange } newNumber={ newNumber } handleNumberChange={ handleNumberChange } />\n      </div>\n      <ShowMessage message={ message } />\n      <ShowErrorMessage errorMessage={ errorMessage } />\n      <h2>Numbers</h2>\n      <ul>\n        { persons.filter(person => person.display).map(person => {\n          return <Number key={ person.name } person={ person } handleDelete={ () => handleDelete(person) } />\n        }) }\n      </ul>\n    </div>\n\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}